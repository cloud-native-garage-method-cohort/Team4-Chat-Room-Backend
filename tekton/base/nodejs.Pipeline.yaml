apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: nodejs
spec:
  params:
    - name: app-name
      type: string
      description: App name
    - name: source-repo
      type: string 
      description: Source code repository
    - name: sha
      type: string
      description: Precise SHA of the commit to build
      default: ""
    - name: image-repo
      type: string
      description: Image Repository
  workspaces:
    - name: pipeline-shared-data
    - name: production-repository
  tasks:
    - name: clone-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: "$(params.source-repo)"
        - name: revision
          value: "$(params.sha)"
      workspaces:
        - name: output
          workspace: pipeline-shared-data
    - name: run-test
      runAfter:
        - clone-repository
      taskref:
        name: npm
      params:
        - name: ARGS
          value:
            - install-ci-test            
      workspaces:
        - name: source 
          workspace: pipeline-shared-data
    - name: create-image
      runAfter:
        - run-test
      taskref:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "$(params.image-repo):$(tasks.clone-repository.results.commit)"          
      workspaces:
        - name: source 
          workspace: pipeline-shared-data
    - name: create-configuration
      runAfter:
        - create-image
      taskRef:
        name: create-configuration
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: source-repo
          value: "$(params.source-repo)"
        - name: commit
          value: "$(tasks.clone-repository.results.commit)"
        - name: image-repo
          value: "$(params.image-repo)"
        - name: runtime
          value: "js"
      workspaces:
        - name: source
          workspace: pipeline-shared-data
    - name: deploy
      params:
        - name: app-namespace
          value: "$(context.pipelineRun.namespace)"
        - name: manifest
          value: "$(tasks.create-configuration.results.manifest)"
      runAfter:
        - create-configuration
      taskRef:
        name: deploy
      workspaces:
        - name: source
          workspace: pipeline-shared-data
    # - name: save-configuration
    #   params:
    #     - name: manifest
    #       value: "$(tasks.create-configuration.results.manifest)"
    #     - name: app-name
    #       value: "$(params.app-name)"
    #     - name: sha
    #       value: "$(tasks.clone-repository.results.commit)"
    #   runAfter:
    #     - deploy
    #   taskRef:
    #     name: save-configuration
    #   workspaces:
    #     - name: source
    #       workspace: pipeline-shared-data
    #     - name: target
    #       workspace: production-repository
